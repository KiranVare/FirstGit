Consider  two tables Customer(c_id, c_name , email , city , pincode)Order(order_id , date , amount , cust_id.
1.	Create both the tables with primary key and foreign key constraints. 

CREATE TABLE Customer (
    c_id INT PRIMARY KEY,
    c_name VARCHAR(255),
    email VARCHAR(255),
    city VARCHAR(255),
    pincode VARCHAR(10)
);

CREATE TABLE Orders (
    order_id INT PRIMARY KEY,
    date DATE,
    amount DECIMAL(10, 2),
    cust_id INT,
    CONSTRAINT fk_order_cust FOREIGN KEY (cust_id) REFERENCES Customer(c_id)
);

2.	insert 10 records each.

INSERT INTO Customer (c_id, c_name, email, city, pincode)
VALUES
(1, 'Suraj', 'Suraj@gmail.com', 'Mumbai', 400001),
(2, 'Mahesh', 'Mahesh@gmail.com', 'Pune', 500001),
(3, 'Ganesh', 'Ganesh@gmail.com', 'Pune', 600001),
(4, 'Manoj', 'Manoj@gmail.com', 'Nashik', 700001),
(5, 'Atharva', 'Atharva@gmail.com', 'Nagpur', 800001),
(6, 'rahul', 'rahul@gmail.com', 'Mumbai', 900001),
(7, 'Aditya', 'Aditya@gmail.com', 'Pune', 400001),
(8, 'Ruturaj', 'Ruturaj@gmail.com', 'karad', 480001),
(9, 'kiran', 'kiran@gmail.com', 'Pune', 407001),
(10, 'Suresh', 'Suresh@gmail.com', 'Mumbai', 480001),
(11, 'Manish', 'Manish@gmail.com', 'Pune', 480001);

INSERT INTO Orders (order_id, date, amount, cust_id)
VALUES
(101, '2023-01-15', 100.00, 1),
(102, '2023-01-16', 150.00, 2),
(103, '2023-01-17', 300.00, 2),
(104, '2023-01-18', 430.00, 4),
(105, '2023-01-18', 530.00, 4),
(106, '2023-01-19', 700.00, 6),
(107, '2023-01-20', 200.00, 7),
(108, '2023-01-20', 400.00, 7),
(109, '2023-01-21', 310.00, 9),
(110, '2023-01-22', 220.00, 3);


3.	Find all orders placed by customers with cust_id 2

SELECT * FROM Orders WHERE cust_id = 2;

4.	Find list of customers who placed their order and details of order

SELECT c.c_id, c.c_name, c.email, c.city, c.pincode, o.order_id, o.date, o.amount
FROM Customer c
INNER JOIN Orders o ON c.c_id = o.cust_id;

5.	List of customers who havenâ€™t placed order

SELECT * FROM Customer
WHERE c_id NOT IN (SELECT DISTINCT cust_id FROM Orders);


6.	List all orders and append to customer table

SELECT c.c_id, c.c_name, c.email, c.city, c.pincode, o.order_id, o.date, o.amount
FROM Customer c
LEFT JOIN Orders o ON c.c_id = o.cust_id;



7.	Display all records

SELECT * FROM Customer;
SELECT * FROM Orders;

8.	Display customer that are from same city8

SELECT c1.c_name, c1.city, c2.c_name AS SameCityCustomer
FROM Customer c1
INNER JOIN Customer c2 ON c1.city = c2.city AND c1.c_id <> c2.c_id;

